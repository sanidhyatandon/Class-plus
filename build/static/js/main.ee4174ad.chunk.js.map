{"version":3,"sources":["api.config.js","common/Modal/index.js","common/TextInput/index.js","components/Photos/index.js","common/utilities.js","containers/Photos/index.js","routes/routing.js","App.js","serviceWorker.js","index.js"],"names":["defaultValues","retry","interval","timeout","appPath","apiKey","config","getPhotos","url","getImage","searchPhotos","Modal","props","children","isClose","handleModalClose","ReactDOM","createPortal","className","role","aria-modal","aria-labelledby","onClick","document","getElementById","TextInput","classname","handleSearch","type","onChange","forwardRef","ref","photoList","photos","photo","isOpen","onPhotoClick","onModalClose","photoClickData","id","server","secret","title","getImageURL","apiConfig","map","key","src","alt","event","throttle","func","limit","inThrottle","context","args","apply","setTimeout","Photos","useState","setPhotos","searchTerm","setSearchTerm","setIsOpen","page","setPage","setpPhotoClickData","resultsRef","useRef","handleScroll","current","window","pageYOffset","innerHeight","clientHeight","outerHeight","useEffect","addEventListener","removeEventListener","getPhotosURL","fetch","then","response","json","catch","error","console","log","debouncedCount","useCallback","wait","immediate","later","callNow","clearTimeout","debounce","searchPhotosURL","target","value","length","data","routes","exact","path","component","history","createBrowserHistory","App","Component","Boolean","location","hostname","match","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0VAAMA,EAAgB,CACpBC,MAAO,EACPC,SAAU,EACVC,QAAS,KAGLC,EAAU,wCAEVC,EAAS,mCAiBAC,EAhBA,CAEbC,UAAU,2BACLP,GADI,IAEPQ,IAAI,GAAD,OAAKJ,EAAL,mDAAuDC,KAE5DI,SAAS,2BACJT,GADG,IAENQ,IAAI,kCAENE,aAAa,2BACRV,GADO,IAEVQ,IAAI,GAAD,OAAKJ,EAAL,gDAAoDC,MCK5CM,G,MApBD,SAAAC,GACZ,IAAQC,EAAwCD,EAAxCC,SAAUC,EAA8BF,EAA9BE,QAASC,EAAqBH,EAArBG,iBAG3B,OAAOC,IAASC,aACd,2BAAOC,UAAU,QAAQC,KAAK,SAASC,aAAW,OAAOC,kBAAgB,iBACvE,yBAAKH,UAAU,UACf,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,mBAAmBL,IAEnCC,GACC,4BAAQI,UAAU,eAAeI,QAASP,GAA1C,MAKJQ,SAASC,eAAe,YCfbC,EALG,SAAAb,GAChB,IAAQc,EAA4Bd,EAA5Bc,UAAWC,EAAiBf,EAAjBe,aACnB,OAAO,2BAAOT,UAAWQ,EAAWE,KAAK,OAAOC,SAAUF,KC8C7CG,G,MAAAA,sBA3CA,SAAClB,EAAOmB,GACrB,MAOInB,GAAS,GAPb,IACEoB,UADF,gBAC+C,GAD/C,GACeC,OADf,gBACwC,GADxC,GACyBC,aADzB,MACiC,GADjC,EAEEC,EAFF,EAEEA,OACAR,EAHF,EAGEA,aACAS,EAJF,EAIEA,aACAC,EALF,EAKEA,aAIF,EATA,EAMEC,gBAGsD,GAAhDC,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,OAAQC,EAApB,EAAoBA,OAAQC,EAA5B,EAA4BA,MAGTC,EACfC,EADFnC,SAAYD,IAEd,OACE,yBAAKU,UAAU,oBACb,yBAAKA,UAAU,0BACb,wBAAIA,UAAU,sBAAd,iBACA,kBAAC,EAAD,CAAWQ,UAAU,qBAAqBC,aAAcA,KAE1D,yBAAKT,UAAU,gBAAgBa,IAAKA,GAClC,4BACGG,EAAMW,KAAI,gBAAGN,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,OAAQC,EAAvB,EAAuBA,MAAvB,OACT,wBAAII,IAAKP,GACP,yBACErB,UAAU,YACV6B,IAAG,UAAKJ,EAAL,YAAoBH,EAApB,YAA8BD,EAA9B,YAAoCE,EAApC,WACHO,IAAKN,EACLpB,QAAS,SAAA2B,GAAK,OAAIb,EAAaa,EAAO,CAAEV,KAAIC,SAAQC,SAAQC,kBAKnEP,GACC,kBAAC,EAAD,CAAOrB,SAAO,EAACC,iBAAkBsB,GAC/B,yBAAKnB,UAAU,YAAY6B,IAAG,UAAKJ,EAAL,YAAoBH,EAApB,YAA8BD,EAA9B,YAAoCE,EAApC,WAAqDO,IAAKN,WC5BpG,IAAMQ,EAAW,SAACC,EAAMC,GACtB,IAAIC,EACJ,OAAO,WACL,IAAMC,O,EACN,IAAKD,EAAY,CAAC,IAAD,uBAFRE,EAEQ,yBAFRA,EAEQ,gBACfJ,EAAKK,MAAMF,EAASC,GACpBF,GAAa,EACbI,YAAW,WACTJ,GAAa,IACZD,MC4EMM,EA9FA,WACb,MAA4BC,mBAAS,IAArC,mBAAO1B,EAAP,KAAe2B,EAAf,KACA,EAAoCD,mBAAS,IAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KACA,EAA4BH,oBAAS,GAArC,mBAAOxB,EAAP,KAAe4B,EAAf,KACA,EAAwBJ,mBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA6CN,mBAAS,IAAtD,mBAAOrB,EAAP,KAAuB4B,EAAvB,KAEMC,EAAaC,iBAAO,MAEpBC,EAAe,WAEjBF,EAAWG,SACXC,OAAOC,YAAcD,OAAOE,YAAcN,EAAWG,QAAQI,aAAoC,GAArBH,OAAOI,aAEnFV,GAAQ,SAAAD,GAAI,OAAIA,EAAO,MAI3BY,qBAAU,WAER,OADAT,EAAWG,QAAQO,iBAAiB,SAAU3B,EAASmB,EAAc,MAC9D,kBAAME,OAAOO,oBAAoB,SAAU5B,EAASmB,EAAc,SACxE,IAEHO,qBAAU,WACR,IACoBG,EAChBnC,EADFrC,UAAaC,IAEfwE,MAAM,GAAD,OAAID,EAAJ,6BAAqCf,EAArC,kCACFiB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAjD,GAAS,OAAI4B,EAAU5B,MAC5BoD,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,CAACrB,IAEJ,IAAMwB,EAAiBC,sBDvCzB,SAAkBtC,EAAMuC,EAAMC,GAAY,IACpCxF,EADmC,OAEvC,OAAO,WAAc,IAAD,uBAAToD,EAAS,yBAATA,EAAS,gBAClB,IAAMD,EAAU,EACVsC,EAAQ,WACZzF,EAAU,KACLwF,GAAWxC,EAAKK,MAAMF,EAASC,IAEhCsC,EAAUF,IAAcxF,EAC9B2F,aAAa3F,GACbA,EAAUsD,WAAWmC,EAAOF,GACxBG,GAAS1C,EAAKK,MAAMF,EAASC,IC6BjCwC,EAAS,WACP,IACuBC,EACnBpD,EADFlC,aAAgBF,IAGlB8E,QAAQC,IAAI1B,EAAY,cAExBmB,MAAM,GAAD,OAAIgB,EAAJ,6BAAwCnC,EAAxC,kCACFoB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAjD,GAAS,OAAI4B,EAAU5B,MAC5BoD,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,KACH,CAACxB,IAUHe,qBAAU,WACR,IACoBG,EAChBnC,EADFrC,UAAaC,IAEfwE,MAAM,GAAD,OAAID,EAAJ,6BAAqCf,EAArC,kCACFiB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAjD,GAAS,OAAI4B,EAAU5B,MAC5BoD,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,CAACrB,IAWJ,OACE,6BACE,yBAAK9C,UAAU,cAEX,kBAAC,EAAD,CACEa,IAAKoC,EACLnC,UAAWC,EACXE,OAAQA,EACRR,aAlCW,SAAAsB,GACnBa,EAAcb,EAAMgD,OAAOC,OACvBrC,EAAWsC,QAAU,GACvBX,KAgCMpD,aAdgB,SAACa,EAAOmD,GAChCrC,GAAU,SAAA5B,GAAM,OAAKA,KACrB+B,EAAmBkC,IAaX/D,aAnBe,WACvB0B,GAAU,IAmBFzB,eAAgBA,OCnFb+D,EALb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAO,EAAMC,KAAK,IAAIC,UAAW9C,K,OCGtC+C,G,MAAUC,eAODC,E,4JAJb,WACE,OAAO,kBAAC,IAAD,CAAQF,QAASA,GAAUJ,O,GAFpBO,aCAEC,QACW,cAA7BtC,OAAOuC,SAASC,UAEe,UAA7BxC,OAAOuC,SAASC,UAEhBxC,OAAOuC,SAASC,SAASC,MAAM,2DCTnChG,IAASiG,OACP,kBAAC,aAAD,KACE,kBAAC,EAAD,OAEF1F,SAASC,eAAe,SD8FpB,kBAAmB0F,WACrBA,UAAUC,cAAcC,MAAMnC,MAAK,SAAAoC,GACjCA,EAAaC,kB","file":"static/js/main.ee4174ad.chunk.js","sourcesContent":["const defaultValues = {\n  retry: 0,\n  interval: 0,\n  timeout: 2000\n};\n\nconst appPath = 'https://www.flickr.com/services/rest/';\n\nconst apiKey = '83a1eebf8fe298813824d11d885af847';\nconst config = {\n  // Current User\n  getPhotos: {\n    ...defaultValues,\n    url: `${appPath}?method=flickr.photos.getRecent&api_key=${apiKey}`\n  },\n  getImage: {\n    ...defaultValues,\n    url: `https://live.staticflickr.com`\n  },\n  searchPhotos: {\n    ...defaultValues,\n    url: `${appPath}?method=flickr.photos.search&api_key=${apiKey}`\n  }\n};\n\nexport default config;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\n\nconst Modal = props => {\n  const { children, isClose, handleModalClose } = props;\n\n  // Portals --> to render children into a DOM node that exists outside the DOM hierarchy of the parent component.\n  return ReactDOM.createPortal(\n    <aside className=\"modal\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-heading\">\n      <div className=\"theme\" />\n      <div className=\"modal-content-wrapper\">\n        <div className=\"modal-container\">{children}</div>\n      </div>\n      {isClose && (\n        <button className=\"close-button\" onClick={handleModalClose}>\n          x\n        </button>\n      )}\n    </aside>,\n    document.getElementById('modal')\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nconst TextInput = props => {\n  const { classname, handleSearch } = props;\n  return <input className={classname} type=\"text\" onChange={handleSearch} />;\n};\n\nexport default TextInput;\n","import React, { forwardRef } from 'react';\nimport Modal from '../../common/Modal';\nimport apiConfig from '../../api.config';\nimport TextInput from '../../common/TextInput';\n\nimport './index.scss';\n\nconst Photos = (props, ref) => {\n  const {\n    photoList: { photos: { photo = [] } = {} } = {},\n    isOpen,\n    handleSearch,\n    onPhotoClick,\n    onModalClose,\n    photoClickData\n  } = props || {};\n\n  const { id, server, secret, title } = photoClickData || {};\n\n  const {\n    getImage: { url: getImageURL }\n  } = apiConfig;\n  return (\n    <div className=\"photos-container\">\n      <div className=\"photo-search-container\">\n        <h2 className=\"photo-list-heading\">Search Photos</h2>\n        <TextInput classname=\"photo-search-input\" handleSearch={handleSearch} />\n      </div>\n      <div className=\"photo-results\" ref={ref}>\n        <ul>\n          {photo.map(({ id, server, secret, title }) => (\n            <li key={id}>\n              <img\n                className=\"photo-img\"\n                src={`${getImageURL}/${server}/${id}_${secret}_w.jpg}`}\n                alt={title}\n                onClick={event => onPhotoClick(event, { id, server, secret, title })}\n              />\n            </li>\n          ))}\n        </ul>\n        {isOpen && (\n          <Modal isClose handleModalClose={onModalClose}>\n            <img className=\"photo-img\" src={`${getImageURL}/${server}/${id}_${secret}_w.jpg}`} alt={title} />\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default forwardRef(Photos);\n","function debounce(func, wait, immediate) {\n  let timeout;\n  return (...args) => {\n    const context = this;\n    const later = () => {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n\nconst throttle = (func, limit) => {\n  let inThrottle;\n  return (...args) => {\n    const context = this;\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(() => {\n        inThrottle = false;\n      }, limit);\n    }\n  };\n};\n\nexport { debounce, throttle };\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\n\nimport apiConfig from '../../api.config';\nimport PhotoView from '../../components/Photos';\nimport { debounce, throttle } from '../../common/utilities';\n\nconst Photos = () => {\n  const [photos, setPhotos] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [page, setPage] = useState(1);\n  const [photoClickData, setpPhotoClickData] = useState([]);\n\n  const resultsRef = useRef(null);\n\n  const handleScroll = () => {\n    if (\n      resultsRef.current &&\n      window.pageYOffset + window.innerHeight > resultsRef.current.clientHeight - window.outerHeight * 0.3\n    ) {\n      setPage(page => page + 1);\n    }\n  };\n\n  useEffect(() => {\n    resultsRef.current.addEventListener('scroll', throttle(handleScroll, 1000));\n    return () => window.removeEventListener('scroll', throttle(handleScroll, 1000));\n  }, []);\n\n  useEffect(() => {\n    const {\n      getPhotos: { url: getPhotosURL }\n    } = apiConfig;\n    fetch(`${getPhotosURL}&per_page=10&page=${page}&format=json&nojsoncallback=1`)\n      .then(response => response.json())\n      .then(photoList => setPhotos(photoList))\n      .catch(error => console.log(error));\n  }, [page]);\n\n  const debouncedCount = useCallback(\n    debounce(() => {\n      const {\n        searchPhotos: { url: searchPhotosURL }\n      } = apiConfig;\n\n      console.log(searchTerm, 'searchTerm');\n\n      fetch(`${searchPhotosURL}&per_page=10&text=${searchTerm}&format=json&nojsoncallback=1`)\n        .then(response => response.json())\n        .then(photoList => setPhotos(photoList))\n        .catch(error => console.log(error));\n    }, 2000),\n    [searchTerm]\n  );\n\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n    if (searchTerm.length >= 3) {\n      debouncedCount();\n    }\n  };\n\n  useEffect(() => {\n    const {\n      getPhotos: { url: getPhotosURL }\n    } = apiConfig;\n    fetch(`${getPhotosURL}&per_page=10&page=${page}&format=json&nojsoncallback=1`)\n      .then(response => response.json())\n      .then(photoList => setPhotos(photoList))\n      .catch(error => console.log(error));\n  }, [page]);\n\n  const handleModalClose = () => {\n    setIsOpen(false);\n  };\n\n  const photoClickHandler = (event, data) => {\n    setIsOpen(isOpen => !isOpen);\n    setpPhotoClickData(data);\n  };\n\n  return (\n    <div>\n      <div className=\"photo-list\">\n        {\n          <PhotoView\n            ref={resultsRef}\n            photoList={photos}\n            isOpen={isOpen}\n            handleSearch={handleSearch}\n            onPhotoClick={photoClickHandler}\n            onModalClose={handleModalClose}\n            photoClickData={photoClickData}\n          />\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Photos;\n","import { Route, Switch } from 'react-router-dom';\r\nimport React from 'react';\r\nimport Photos from '../containers/Photos';\r\nconst routes = (\r\n  <Switch>\r\n    <Route exact={true} path=\"/\" component={Photos} />\r\n  </Switch>\r\n);\r\n\r\nexport default routes;\r\n","import React, { Component } from 'react';\n\n// import route Components here\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport routes from './routes/routing';\nimport { createBrowserHistory } from 'history';\nimport './common/utilities.scss';\n\nconst history = createBrowserHistory();\n\nclass App extends Component {\n  render() {\n    return <Router history={history}>{routes}</Router>;\n  }\n}\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n ","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}