{"ast":null,"code":"/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */import React from'react';import ReactDOM from'react-dom';import'./styles/index.css';var Modal=function Modal(props){var children=props.children,isClose=props.isClose,handleModalClose=props.handleModalClose;// Portals --> to render children into a DOM node that exists outside the DOM hierarchy of the parent component.\nreturn ReactDOM.createPortal(/*#__PURE__*/React.createElement(\"aside\",{className:\"modal\",role:\"dialog\",\"aria-modal\":\"true\",\"aria-labelledby\":\"modal-heading\"},/*#__PURE__*/React.createElement(\"div\",{className:\"theme\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"modal-content-wrapper\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-container\"},children)),isClose&&/*#__PURE__*/React.createElement(\"button\",{className:\"close-button\",onClick:handleModalClose},\"x\")),document.getElementById('modal'));};export default Modal;","map":{"version":3,"sources":["/Users/santando/class~plus/src/common/Modal/index.js"],"names":["React","ReactDOM","Modal","props","children","isClose","handleModalClose","createPortal","document","getElementById"],"mappings":"AAAA,oEACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CAEA,MAAO,oBAAP,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAAAC,KAAK,CAAI,CACrB,GAAQC,CAAAA,QAAR,CAAgDD,KAAhD,CAAQC,QAAR,CAAkBC,OAAlB,CAAgDF,KAAhD,CAAkBE,OAAlB,CAA2BC,gBAA3B,CAAgDH,KAAhD,CAA2BG,gBAA3B,CAEA;AACA,MAAOL,CAAAA,QAAQ,CAACM,YAAT,cACL,6BAAO,SAAS,CAAC,OAAjB,CAAyB,IAAI,CAAC,QAA9B,CAAuC,aAAW,MAAlD,CAAyD,kBAAgB,eAAzE,eACE,2BAAK,SAAS,CAAC,OAAf,EADF,cAEE,2BAAK,SAAS,CAAC,uBAAf,eACE,2BAAK,SAAS,CAAC,iBAAf,EAAkCH,QAAlC,CADF,CAFF,CAKGC,OAAO,eACN,8BAAQ,SAAS,CAAC,cAAlB,CAAiC,OAAO,CAAEC,gBAA1C,MANJ,CADK,CAYLE,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAZK,CAAP,CAcD,CAlBD,CAoBA,cAAeP,CAAAA,KAAf","sourcesContent":["/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\n\nconst Modal = props => {\n  const { children, isClose, handleModalClose } = props;\n\n  // Portals --> to render children into a DOM node that exists outside the DOM hierarchy of the parent component.\n  return ReactDOM.createPortal(\n    <aside className=\"modal\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-heading\">\n      <div className=\"theme\" />\n      <div className=\"modal-content-wrapper\">\n        <div className=\"modal-container\">{children}</div>\n      </div>\n      {isClose && (\n        <button className=\"close-button\" onClick={handleModalClose}>\n          x\n        </button>\n      )}\n    </aside>,\n    document.getElementById('modal')\n  );\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}