{"ast":null,"code":"function debounce(func, wait) {\n  let timeout;\n  return (...args) => {\n    const context = this;\n    clearTimeout(timeout);\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n\nconst throttle = (func, limit) => {\n  let inThrottle;\n  return (...args) => {\n    const context = this;\n\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(() => {\n        inThrottle = false;\n      }, limit);\n    }\n  };\n};\n\nexport { debounce, throttle };","map":{"version":3,"sources":["/Users/santando/class~plus/src/common/utilities.js"],"names":["debounce","func","wait","timeout","args","context","clearTimeout","callNow","immediate","setTimeout","later","apply","throttle","limit","inThrottle"],"mappings":"AAAA,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,IAAxB,EAA8B;AAC5B,MAAIC,OAAJ;AACA,SAAO,CAAC,GAAGC,IAAJ,KAAa;AAClB,UAAMC,OAAO,GAAG,IAAhB;AACAC,IAAAA,YAAY,CAACH,OAAD,CAAZ;AACA,UAAMI,OAAO,GAAGC,SAAS,IAAI,CAACL,OAA9B;AACAG,IAAAA,YAAY,CAACH,OAAD,CAAZ;AACAA,IAAAA,OAAO,GAAGM,UAAU,CAACC,KAAD,EAAQR,IAAR,CAApB;AACA,QAAIK,OAAJ,EAAaN,IAAI,CAACU,KAAL,CAAWN,OAAX,EAAoBD,IAApB;AACd,GAPD;AAQD;;AAED,MAAMQ,QAAQ,GAAG,CAACX,IAAD,EAAOY,KAAP,KAAiB;AAChC,MAAIC,UAAJ;AACA,SAAO,CAAC,GAAGV,IAAJ,KAAa;AAClB,UAAMC,OAAO,GAAG,IAAhB;;AACA,QAAI,CAACS,UAAL,EAAiB;AACfb,MAAAA,IAAI,CAACU,KAAL,CAAWN,OAAX,EAAoBD,IAApB;AACAU,MAAAA,UAAU,GAAG,IAAb;AACAL,MAAAA,UAAU,CAAC,MAAM;AACfK,QAAAA,UAAU,GAAG,KAAb;AACD,OAFS,EAEPD,KAFO,CAAV;AAGD;AACF,GATD;AAUD,CAZD;;AAcA,SAASb,QAAT,EAAmBY,QAAnB","sourcesContent":["function debounce(func, wait) {\n  let timeout;\n  return (...args) => {\n    const context = this;\n    clearTimeout(timeout);\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n\nconst throttle = (func, limit) => {\n  let inThrottle;\n  return (...args) => {\n    const context = this;\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(() => {\n        inThrottle = false;\n      }, limit);\n    }\n  };\n};\n\nexport { debounce, throttle };\n"]},"metadata":{},"sourceType":"module"}